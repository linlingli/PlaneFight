{"version":3,"sources":["file:///Users/lipeiling/PlaneFight/assets/Scritps/Player.ts"],"names":["_decorator","Animation","Collider2D","Component","Contact2DType","Input","input","instantiate","Node","Prefab","Sprite","Vec3","Reward","RewardType","GameManager","LifeCountUI","ccclass","property","ShootType","Player","type","shootTimer","invincibleTimer","isInvincible","twoShootTimer","isTwoShoot","collider","canControl","lestReward","onLoad","on","EventType","TOUCH_MOVE","onTouchMove","getComponent","BEGIN_CONTACT","onBeginContact","onDestroy","off","event","lifeCoount","p","node","position","targetPosition","x","getDeltaX","y","getDeltaY","z","setPosition","start","lifeCountUI","updateUI","update","dt","shootType","OneShoot","oneShoot","TwoShoot","twoShoot","invincibleTime","transitionToTwoShootType","transitionToOneShootType","shootRate","bullet1","bullet1Prefab","bulletParent","addChild","setWorldPosition","position1","worldPosition","twoShootTime","bullet2Prefab","bullet2","position2","position3","selfCollider","otherCollider","contact","reward","onContactToReward","onContactToEnemy","rewardType","Bomb","getInstance","AddBomb","enabled","changeLifeCount","anim","play","animHit","animDown","None","scheduleOnce","gameOver","count","disableControl","enableControl"],"mappings":"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","sourcesContent":["import { _decorator, Animation, Collider2D, Component, Contact2DType, EventTouch, Input, input, instantiate, IPhysics2DContact, Node, Prefab, Sprite, Vec3 } from 'cc';\nimport { Reward, RewardType } from './Reward';\nimport { GameManager } from './GameManager';\nimport { LifeCountUI } from './UI/LifeCountUI';\nconst { ccclass, property } = _decorator;\n\nenum ShootType {\n    None,\n    OneShoot,\n    TwoShoot\n}\n\n@ccclass('Player')\nexport class Player extends Component {\n\n    @property\n    shootRate: number = 0.5 //多少秒發射一次子彈\n    shootTimer: number = 0\n\n    @property(Node)\n    bulletParent: Node = null\n    @property(Prefab)\n    bullet1Prefab: Prefab = null\n    @property(Node)\n    position1: Node = null\n\n    @property(Prefab)\n    bullet2Prefab: Prefab = null\n    @property(Node)\n    position2: Node = null\n    @property(Node)\n    position3: Node = null\n\n    @property({ type: ShootType })\n    shootType: ShootType = ShootType.OneShoot; // 默認一發類型\n\n    @property\n    lifeCoount: number = 3\n\n    @property(Animation)\n    anim: Animation = null\n    @property\n    animHit: string = ''\n    @property\n    animDown: string = ''\n\n    @property\n    invincibleTime: number = 1\n    invincibleTimer: number = 0\n    isInvincible: boolean = false\n\n    @property\n    twoShootTime: number = 5\n    twoShootTimer: number = 0\n    isTwoShoot: boolean = false\n\n    @property(LifeCountUI)\n    lifeCountUI: LifeCountUI = null\n\n    collider: Collider2D = null\n    private canControl: boolean = true\n\n    protected onLoad(): void {\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        this.collider = this.getComponent(Collider2D)\n        if (this.collider) {\n            this.collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this)\n        }\n    }\n    protected onDestroy(): void {\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        if (this.collider) {\n            this.collider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this)\n        }\n    }\n\n    onTouchMove(event: EventTouch) {\n        if (!this.canControl) return\n        if (this.lifeCoount < 1) return\n        const p = this.node.position\n        let targetPosition = new Vec3(p.x + event.getDeltaX(), p.y + event.getDeltaY(), p.z)\n        if (targetPosition.x < -230) {\n            targetPosition.x = -230\n        }\n        if (targetPosition.x > 230) {\n            targetPosition.x = 230\n        }\n        if (targetPosition.y > 380) {\n            targetPosition.y = 380\n        }\n        if (targetPosition.y < - 380) {\n            targetPosition.y = -380\n        }\n        this.node.setPosition(targetPosition)\n    }\n    protected start(): void {\n        this.lifeCountUI.updateUI(this.lifeCoount)\n    }\n\n    protected update(dt: number): void {\n        switch (this.shootType) {\n            case ShootType.OneShoot:\n                this.oneShoot(dt)\n                break;\n            case ShootType.TwoShoot:\n                this.twoShoot(dt)\n                break;\n        }\n\n        if (this.isInvincible) {\n            this.invincibleTimer += dt\n            if (this.invincibleTimer >= this.invincibleTime) {\n                this.isInvincible = false\n            }\n        }\n    }\n    transitionToTwoShootType() {\n        this.shootType = ShootType.TwoShoot\n        this.twoShootTimer = 0\n    }\n    transitionToOneShootType() {\n        this.shootType = ShootType.OneShoot\n    }\n    oneShoot(dt: number) {\n        this.shootTimer += dt\n        if (this.shootTimer >= this.shootRate) {\n            this.shootTimer = 0\n            const bullet1 = instantiate(this.bullet1Prefab)\n            this.bulletParent.addChild(bullet1)\n            bullet1.setWorldPosition(this.position1.worldPosition)\n        }\n    }\n    twoShoot(dt: number) {\n        this.twoShootTimer += dt\n        if (this.twoShootTimer >= this.twoShootTime) {\n            this.transitionToOneShootType()\n        }\n        this.shootTimer += dt\n        if (this.shootTimer >= this.shootRate) {\n            this.shootTimer = 0\n            const bullet1 = instantiate(this.bullet2Prefab)\n            const bullet2 = instantiate(this.bullet2Prefab)\n            this.bulletParent.addChild(bullet1)\n            this.bulletParent.addChild(bullet2)\n            bullet1.setWorldPosition(this.position2.worldPosition)\n            bullet2.setWorldPosition(this.position3.worldPosition)\n        }\n    }\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        const reward = otherCollider.getComponent(Reward)\n        if (reward) {\n            this.onContactToReward(reward)\n        } else {\n            this.onContactToEnemy()\n        }\n\n    }\n    lestReward: Reward = null\n    onContactToReward(reward: Reward) {\n        if (reward === this.lestReward) return\n        this.lestReward = reward\n        switch (reward.rewardType) {\n            case RewardType.TwoShoot:\n                this.transitionToTwoShootType()\n                break;\n            case RewardType.Bomb:\n                GameManager.getInstance().AddBomb()\n                break;\n        }\n        reward.getComponent(Collider2D).enabled = false // 禁用Collider防止跟其他物體碰撞\n        reward.getComponent(Sprite).enabled = false // 禁用Sprite防止顯示\n    }\n    onContactToEnemy() {\n        if (this.isInvincible) return // 如果玩家處於無敵狀態，則不執行碰撞邏輯\n        this.isInvincible = true\n        this.invincibleTimer = 0\n\n        this.changeLifeCount(-1)\n        if (this.lifeCoount > 0) {\n            this.anim.play(this.animHit)\n        } else {\n            this.anim.play(this.animDown)\n        }\n\n        if (this.lifeCoount <= 0) { // 如果敵機血量小於等於0，則銷毀自身\n            this.shootType = ShootType.None\n            if (this.collider) {  // 禁用collider防止重複觸發死亡事件\n                this.collider.enabled = false\n            }\n            this.scheduleOnce(() => {\n                GameManager.getInstance().gameOver()\n            }, 1) // 延遲1秒播放完動畫再結束遊戲\n        }\n    }\n    changeLifeCount(count: number) {\n        this.lifeCoount += count\n        this.lifeCountUI.updateUI(this.lifeCoount)\n    }\n    disableControl() {\n        this.canControl = false\n    }\n    enableControl() {\n        this.canControl = true\n    }\n}\n\n"]}